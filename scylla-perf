#!/usr/bin/env python3
import argparse
import threading

from src.routines import execute_stress_routine
from src.spinner import SpinnerThread
from src.cli_types import RequirementsResults
from src.views import results_view


def _set_parser() -> argparse.ArgumentParser:
    """Set the command line parser interface."""
    parser = argparse.ArgumentParser(
        prog="Cassandra stress test",
        description="Run N cuncurrent cassandra-stress test commands",
    )
    parser.add_argument(
        "n_stress_tests",
        metavar="N",
        type=int,
        nargs=1,
        help="The number of cassandra-stress tests to run",
        choices=range(1, 11),  # limit to 10 tests max
        action="store",
    )
    # create an argument to run the docker-compose file
    return parser.parse_args()


def _run_cli(args):
    from src.constants import HOST_IP  # only import this if the cli is run

    requirements_results = RequirementsResults(args.n_stress_tests)
    task = threading.Thread(
        target=execute_stress_routine,
        args=(requirements_results, HOST_IP),
    )
    print(
        f"Running {requirements_results.number_stress_tests} cassandra-stress tests, please wait..."
    )
    task.start()
    spinner_thread = SpinnerThread()
    spinner_thread.start()
    task.join()
    spinner_thread.stop()
    results_view(requirements_results)


def _handle_help(args):
    "if the -h flag is used, only print the help message"
    if args.n_stress_tests == ["-h"]:
        exit(0)


def main():
    args = _set_parser()
    _handle_help(args)
    _run_cli(args)


if __name__ == "__main__":
    main()
